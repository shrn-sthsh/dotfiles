# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left  h
set $down  j
set $up    k
set $right l

# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --show "run,drun,dmenu" \
  --prompt "search programs" \
  --width 35% \
  --height 35% \
  | xargs swaymsg exec --

### Output configuration
# Wallpaper
set $wallpaper "$HOME/Pictures/Wallpapers/Sky/night-city-skyscrapers-night-bridge-4k_1538065958-1258256741.jpg"
output * bg $wallpaper fill

# Display
gaps inner 4
gaps outer 2
# Example configuration:
# output eDP-1 resolution 1728x1117

# You can get the names of your outputs by running: swaymsg -t get_outputs

### Input configuration
# Trackpad
input "1452:851:Apple_MTP_multi-touch" {
    dwt enabled
    natural_scroll enabled
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+w kill

    # Start your launcher
    bindsym $mod+slash exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Exit shortcut pressed. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*

#
# Trackpad
# 
bindsym XF86LaunchA input type:touchpad events toggle enabled disabled

# 
# Display
# 
# Brightness
bindsym XF86MonBrightnessUp   exec brightnessctl set 2%+
bindsym XF86MonBrightnessDown exec brightnessctl set 2%-
#
# Screen lock
set $lock_screen swaylock \
  --image $wallpaper \
  --indicator-radius 100 \
	--indicator-thickness 8 \
 #  --indicator-y-position 800 \
 #  --font JetBrainsMonoNerdFont \
 #  --font-size 48 \
	# --ring-color 6699cc \
 #  --text-color ebdbb2ff \
	# --inside-color 6699cc3f \
	# --ring-wrong-color FF761A \
	# --inside-wrong-color FF761A3f \
 #  # --text-wrong-color ebdbb2ff \
	# --ring-caps-lock-color d79921 \
	# --inside-caps-lock-color d799213f \
 #  --text-caps-color ebdbb2ff \
	# --ring-ver-color 689d68 \
	# --inside-ver-color 689d683f \
 #  --text-ver-color ebdbb2ff \
 #  --layout-bg-color fbf1c7 \
 #  --line-uses-inside \
 #  --line-uses-ring

bindsym $mod+Shift+s exec $HOME/System/sway/screenshot

# Idle configuration
# exec swayidle -w \
#         timeout 300 '$lock_screen -f -c 000000' \
#         timeout 0 'swaymsg "output * power off"' \
#         resume 'swaymsg "output * power on"' \
#         before-sleep '$lock_screen -f -c 000000'

bindsym XF86Sleep exec swayidle -w \
        timeout 0 '$lock_screen -f -c 000000' \
        timeout 0 'swaymsg "output * power off"' \
        resume 'swaymsg "output * power on"' \
        before-sleep '$lock_screen -f -c 000000'


# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#
# Audio 
#
# Volume
bindsym XF86AudioRaiseVolume exec wpctl set-volume -l 1.0 @DEFAULT_SINK@ 5%+
bindsym XF86AudioLowerVolume exec wpctl set-volume -l 1.0 @DEFAULT_SINK@ 5%-
bindsym XF86AudioMute        exec wpctl set-mute          @DEFAULT_SINK@ toggle
#
# Track
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#
# Microphone
bindsym XF86AudioRecord exec amixer set Capture toggle

#
# Search 
# 
# bindsym $menu
bindsym XF86Search exec $menu

#
# Modes
#

### Running services on launch
#
# Waybar
#
exec_always --no-startup-id sh ~/.config/waybar/launch.sh

### Color configuration
# Gruvbox
# see https://github.com/morhetz/gruvbox-contrib/blob/master/color.table
# set $bg #282828 
# set $bg_2 #504945
# set $fg #ebdbb2
# set $fg_1 #FBF1C7
# set $fg_2 #D5C4A1
# set $red #cc241d
# set $green #98971a
# set $yellow #d79921
# set $blue #458588
# set $blue_faded #076678
# set $purple #b16286
# set $aqua #689d68
# set $gray #a89984
# set $darkgray #1d2021

# Falcon
set $bg #161636 
set $bg_2 #202040
set $fg #393959
set $fg_1 #434363
set $fg_2 #4d4d6d
set $red #FF761A
set $green #9BCCBF
set $yellow #FFC552
set $blue #6699cc
set $blue_faded #a1bce1
set $purple #635196
set $aqua #BFDAFF
set $gray #99A4BC
set $darkgray #2a2a4a

# https://thomashunter.name/i3-configurator/
# class                 border  bground text    indicator child_border
client.focused          $blue   $blue   #FFFFFF $blue     $blue
client.focused_inactive $bg_2   #5F676A $fg     #484E50   #5F676A
client.unfocused        $bg_2   #282828 #888888 #292D2E   #222222
client.urgent           #2F343A #FF761A $fg_1   #FF761A   #FF761A
client.placeholder      #1D2021 #0C0C0C $fg     #000000   #0C0C0C

# set font 
# font JetBrainsMonoNerdFont
font pango:JetBrainsMonoNerdFont 10
font pango:JetBrainsMonoNerdFont 10px
